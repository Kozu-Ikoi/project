{"version":3,"sources":["components/Button/Button.jsx","components/Home/Home.jsx","data_fetchers/QuizFetcher.js","models/Quiz.js","components/Quiz/Quiz.jsx","App.jsx","index.js"],"names":["Button","props","onClickHandler","className","onClick","children","Home","history","push","QuizFetcher","axios","get","response","data","Quiz","question","correctAnswer","incorrectAnswers","this","_question","_correctAnswer","_incorrectAnswers","_","shuffle","answer","fetch","quizDataList","results","map","result","he","decode","correct_answer","incorrect_answers","str","quizData","state","quizzes","currentIndex","numberOfCorrects","restart","setState","QuizModel","fetchAndCreateQuizzes","quiz","judgeCorrectAnswer","alert","length","renderLoading","renderQuiz","renderResult","to","answers","shuffleAnswers","index","key","selectAnswer","id","React","Component","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.610f4be1.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n    let { onClickHandler } = props;//let onClickHandler = props.onClickHandler\n\n    //onClickHandlerに関数以外の値がセットされていたら、\n    //ボタンクリック時にエラーを出さないために何も中身のない\n    //関数を実行する\n\nif(typeof onClickHandler !== 'function'){\n    onClickHandler = () => {};\n}\n\nreturn (\n    <div\n    className=\"Button\"\n    onClick={onClickHandler}\n    >\n        {props.children}\n    </div>//props.childrenはButtonコンポーネントの開始タグと終了タグの全ての範囲(Restart)を指す\n);\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\n\nconst Home = ({history})=>{//Route Componentsを使っている、\n    return(//{history}→props内のhistoryを使うと設定\n    <div>\n        <h1>ホーム</h1>\n        <Button onClickHandler = {()=>{\n            history.push('/quiz');\n        }}>\n            クイズページへ移動\n        </Button>\n    </div>\n    );\n};\n\nexport default Home;","import axios from 'axios';//APIにアクセスするライブラリ\n\nconst API_URL = 'https://opentdb.com/api.php?amount=10&type=multiple';\n\nclass QuizFetcher{\n    static async fetch(){\n        const response = await axios.get(API_URL);//axios.getでAPI_URLを受け取る\n        return response.data;\n    }\n}\n\nexport default QuizFetcher;","import _ from 'lodash';\nimport he from 'he';\nimport QuizFetcher from '../data_fetchers/QuizFetcher';\n\nclass Quiz{\n    constructor({question, correctAnswer, incorrectAnswers}){\n\n        this._question = question;\n        this._correctAnswer = correctAnswer;\n        this._incorrectAnswers = [...incorrectAnswers];//_は外からアクセスしてはならないプライベートな値として使われる\n    }\n\n    get question(){\n        return this._question;\n    }//getterキーワードを使って、_〇〇を外部へ返す\n\n    get correctAnswer(){\n        return this._correctAnswer;\n    }\n\n    shuffleAnswers(){\n        return _.shuffle([\n            this._correctAnswer,\n            ...this._incorrectAnswers\n        ]);\n    }// _.shuffleで引数に渡された配列がシャッフルされる、lodashライブラリをインストールしないとダメ、lodashを_に置き換えた\n\n    judgeCorrectAnswer(answer){//こっちはインスタンスメソッド\n        return answer === this._correctAnswer;\n    }\n\n    static async fetchAndCreateQuizzes(){//クラスメソッドの前にstaticが先頭に付く、クラス経由で実行するから特有の値は持たない（ひな形のみ）\n        const quizDataList = await QuizFetcher.fetch();\n\n        return quizDataList.results.map(result =>{\n            return{//heライブラリ→he.decodeによって特殊文字を読める文字にする\n                question: he.decode(result.question),\n                correctAnswer: he.decode(result.correct_answer),\n                incorrectAnswers: result.incorrect_answers.map(str => he.decode(str))\n            };\n        })\n        .map(quizData =>{\n            return new Quiz(quizData);\n        })\n    }\n}\n\nexport default Quiz;","import React from 'react';\nimport { Link } from 'react-router-dom';// import {モジュール名} from 'ファイルパス'\nimport QuizModel from '../../models/Quiz';\nimport Button from  '../Button/Button';\nimport './Quiz.css';\n\nclass Quiz extends React.Component{//クラス→オブジェクト指向\n    constructor(props){\n        super(props);\n\n        this.state = {\n            quizzes: [],\n            currentIndex: 0,\n            numberOfCorrects: 0\n        };\n    }\n\n    async componentDidMount(){//renderメソッド実行、DOMを更新後に実行する\n        await this.restart();\n    }\n\n    async restart(){\n        this.setState({\n            quizzes: [],\n            currentIndex: 0,\n            numberOfCorrects: 0//情報のリセット\n        });\n\n        const quizzes = await QuizModel.fetchAndCreateQuizzes();\n\n        this.setState({ quizzes });\n    }\n\n    selectAnswer(quiz, answer){\n        let { currentIndex, numberOfCorrects } = this.state;\n        const isCorrect = quiz.judgeCorrectAnswer(answer);\n\n        if (isCorrect){\n            numberOfCorrects++;\n            alert('Correct answer!!');\n        }else{\n            alert(`Wrong answer... (The correct answer is \"${quiz.correctAnswer}\")`);\n        }\n        currentIndex++;\n\n        this.setState({\n            currentIndex,\n            numberOfCorrects\n        });\n    }\n\n    render(){\n        const { quizzes, currentIndex } = this.state;\n        \n        //読み込み中\n        if( quizzes.length === 0){\n            return this.renderLoading();\n        }\n\n        //クイズ中\n        if(quizzes.length > 0 && currentIndex < quizzes.length){\n            return this.renderQuiz();\n        }\n\n        if(quizzes.length > 0 && currentIndex >= quizzes.length){\n            return this.renderResult();\n        }\n    }\n\n    renderLoading(){\n        return (\n            <div>\n                <h1>クイズページ</h1>\n                <p>Now loading...</p>\n                <hr/>\n              　<Link to=\"/\">トップページへ</Link>\n            </div>//toに移動先のURLをセット\n        );\n    }\n\n    renderQuiz(){\n        const {currentIndex, quizzes } = this.state;\n\n        const quiz = quizzes[currentIndex];\n        const answers = quiz.shuffleAnswers().map((answer, index) => {\n            return (//keyの値を入力しないと警告される\n                <li key={index}>\n                    <Button\n                      onClickHandler = {() => {this.selectAnswer(quiz, answer) }}\n                    >\n                        {answer}\n                    </Button>\n                </li>\n            );//thisは自分自身の参照→この場合、this===answers\n        });//map→新しい配列の生成\n\n        return (\n            <div>\n                <h1>クイズページ</h1>\n                <div>\n                    <p>{quiz.question}</p>\n                    <ul className = \"QuizList\">{answers}</ul>\n                </div>\n                <hr/>\n                　<Link to=\"/\">トップページへ</Link>\n            </div>\n        );\n    }\n\n    renderResult(){\n        const { quizzes, numberOfCorrects } = this.state;\n\n        return (\n            <div>\n                <h1>クイズページ</h1>\n                <div>\n                    <p id=\"result\">{`${numberOfCorrects}/${quizzes.length}corrects.`}</p>\n                    <Button\n                      onClickHandler={() => {this.restart()}}\n                      >\n                    　Restart\n                    </Button>\n                </div>\n                <hr/>\n                <Link to=\"/\">トップページへ</Link>\n            </div>\n        )\n    }\n}\n\n\nexport default Quiz;","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route\n}from 'react-router-dom';//HashRouterによって\"#\"をつけている（常に同じページという意味）\nimport Home from './components/Home/Home';\nimport Quiz from './components/Quiz/Quiz';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className = \"App\">\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/quiz\" exact component={Quiz} />\n    </Router>\n    </div>\n  );//exactはurl『完全一致』のページのみを開くようにする、pathにはurl、componentには表示するコンポーネントをセット\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}